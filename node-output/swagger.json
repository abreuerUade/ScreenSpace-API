{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "Production URL",
    "url" : "https://screenspace-api.azurewebsites.net/api/v1"
  }, {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/BREUERANDRES/ScreenSpace-API/1.0.0"
  } ],
  "info" : {
    "description" : "This is a non commercial project for a software engineering degree. ItÂ´s a monolithic REST API for cinema management and movie ticket booking mobile app.",
    "version" : "1.0.0",
    "title" : "ScreenSpace API",
    "contact" : {
      "email" : "contact@screenspace.com"
    }
  },
  "tags" : [ {
    "name" : "Health Check",
    "description" : "Operation available to regular developers"
  }, {
    "name" : "Users",
    "description" : "Operation available to regular users"
  }, {
    "name" : "Owners",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "Cinemas",
    "description" : "Operations available only to cinema owners"
  }, {
    "name" : "Theaters",
    "description" : "Operations available only to cinema owners"
  }, {
    "name" : "Showtimes",
    "description" : "Operations available only to cinema owners"
  }, {
    "name" : "Movies",
    "description" : "Operations available only to cinema owners"
  }, {
    "name" : "Bookings",
    "description" : "Operations available only to logged users"
  }, {
    "name" : "Ratings",
    "description" : "Operations available only to logged users"
  } ],
  "paths" : {
    "/ping" : {
      "get" : {
        "tags" : [ "Health Check" ],
        "description" : "Check the availability of the server and database.",
        "responses" : {
          "200" : {
            "description" : "API working correctly"
          },
          "500" : {
            "description" : "Server not found"
          }
        }
      }
    },
    "/users/auth" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Log in user",
        "description" : "Creates a new user if loggin in for the first time.",
        "operationId" : "logUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "token" : {
                    "type" : "string",
                    "example" : "987234ac059826d3045f67"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "user" : {
                          "$ref" : "#/components/schemas/User"
                        },
                        "accessToken" : {
                          "type" : "string",
                          "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        },
                        "refreshToken" : {
                          "type" : "string",
                          "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Log Out",
        "description" : "This can only be done by the logged in owner.",
        "operationId" : "logoutUser",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "accessToken" : {
                      "type" : "string",
                      "example" : "null"
                    },
                    "refreshToken" : {
                      "type" : "string",
                      "example" : "null"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You must be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/" : {
      "get" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Get logged user data",
        "operationId" : "searchUserById",
        "description" : "By passing in the appropriate options, you can search for available specific user",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "user" : {
                          "$ref" : "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Update logged user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "updateUser",
        "requestBody" : {
          "description" : "Update an existent user in the store",
          "content" : {
            "x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "example" : "Tom Jones"
                  },
                  "imageUrl" : {
                    "type" : "string",
                    "format" : "url",
                    "example" : "https://....."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "user" : {
                          "$ref" : "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You must be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Delete logged user",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteUser",
        "responses" : {
          "200" : {
            "description" : "Successful operation"
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You must be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners/confirmedEmail/{token}" : {
      "get" : {
        "tags" : [ "Owners" ],
        "summary" : "Owner confirmed email",
        "description" : "When the owner signs up an email is sent to get confirmation",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "Hashed token. The email has the token.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Token Expired or Invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid email or password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners/auth" : {
      "post" : {
        "tags" : [ "Owners" ],
        "summary" : "Log In",
        "description" : "loginOwner",
        "requestBody" : {
          "description" : "Log in with email and password",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "example" : "user@mail.com"
                  },
                  "password" : {
                    "type" : "string",
                    "example" : "pass1234"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "owner" : {
                          "$ref" : "#/components/schemas/Owner"
                        },
                        "accessToken" : {
                          "type" : "string",
                          "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        },
                        "refreshToken" : {
                          "type" : "string",
                          "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid email or password"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Owners" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Log Out",
        "description" : "Session is changed to invalid.",
        "operationId" : "logoutOwner",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "accessToken" : {
                      "type" : "string",
                      "example" : "null"
                    },
                    "refreshToken" : {
                      "type" : "string",
                      "example" : "null"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners" : {
      "post" : {
        "tags" : [ "Owners" ],
        "summary" : "Sign Up",
        "description" : "Create a new account for owner and send email for validation",
        "operationId" : "addOwner",
        "requestBody" : {
          "description" : "Signup only needs email and password",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "example" : "user@mail.com"
                  },
                  "password" : {
                    "type" : "string",
                    "example" : "pass1234"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Confirmation email sent!"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Input Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid input data. Enter valid email"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Duplication Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "User alredy exists"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Owners" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Get logged owner data",
        "operationId" : "getOwner",
        "description" : "Gets owner personal information. Must be logged in.",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "$ref" : "#/components/schemas/Owner"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Owners" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Update logged Owner",
        "description" : "This can only be done by the logged in owner.",
        "operationId" : "updateOwner",
        "requestBody" : {
          "description" : "Update an existent Owner. Can update one or more properties",
          "content" : {
            "x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "example" : "Tom"
                  },
                  "mail" : {
                    "type" : "string",
                    "format" : "mail",
                    "example" : "tomjones@gmail.com"
                  },
                  "imageUrl" : {
                    "type" : "string",
                    "format" : "url",
                    "example" : "https://....."
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "owner" : {
                          "$ref" : "#/components/schemas/Owner"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Owners" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Delete logged Owner",
        "description" : "Owner is modified to inactive.",
        "operationId" : "deleteOwner",
        "responses" : {
          "204" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "string",
                      "example" : null
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You must be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners/forgotPassword" : {
      "post" : {
        "tags" : [ "Owners" ],
        "summary" : "Reset password",
        "description" : "Sends email with a provisional password and a token",
        "operationId" : "forgotPassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string",
                    "example" : "user@mail.com"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Input Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "There is no owner with thar email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners/password" : {
      "patch" : {
        "tags" : [ "Owners" ],
        "summary" : "Update password",
        "description" : "Verifies that token was not modified and sets new password",
        "operationId" : "updatePassword",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "currentPassword" : {
                    "type" : "string",
                    "example" : "newPassword1234"
                  },
                  "password" : {
                    "type" : "string",
                    "example" : "newPassword1234"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Password Updated"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Input Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Token expired or invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cinemas" : {
      "post" : {
        "tags" : [ "Cinemas" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Create new cinema",
        "description" : "Create new cinema. Must be done by a logged owner",
        "operationId" : "addCinema",
        "requestBody" : {
          "description" : "Create a new cinema",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "company" : {
                    "type" : "string",
                    "example" : "Hoyts"
                  },
                  "name" : {
                    "type" : "string",
                    "example" : "Hoyts Abasto"
                  },
                  "address" : {
                    "$ref" : "#/components/schemas/Address"
                  },
                  "price" : {
                    "type" : "integer",
                    "example" : "23.99"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/Cinema"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Cinema alredy exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Duplicate key error"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Cinemas" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches all cinemas",
        "operationId" : "searchCinema",
        "description" : "Searches all cinemas",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 5
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Cinema"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cinemas/{cinemaId}" : {
      "get" : {
        "tags" : [ "Cinemas" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches Cinema By Id",
        "operationId" : "searchCinemaById",
        "description" : "Gets cinema by id",
        "parameters" : [ {
          "name" : "cinemaId",
          "in" : "path",
          "description" : "cinema _id that needs to be found",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "$ref" : "#/components/schemas/Cinema"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Cinema not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid _id: {cinemaId}."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Cinemas" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Update Cinema By Id",
        "description" : "This can only be done by the logged in owner.",
        "operationId" : "updateCinema",
        "parameters" : [ {
          "name" : "cinemaId",
          "in" : "path",
          "description" : "cinema _id that needs to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update an existent Cinema",
          "content" : {
            "x-www-form-urlencoded" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "price" : {
                    "type" : "integer",
                    "example" : "23.99"
                  },
                  "active" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "$ref" : "#/components/schemas/Cinema"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Cinema not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "No doc found with that id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Cinemas" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Delete User By Id",
        "description" : "This can only be done by the logged in owner.",
        "operationId" : "deleteCinema",
        "parameters" : [ {
          "name" : "cinemaId",
          "in" : "path",
          "description" : "cinema _id that needs to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "string",
                      "example" : null
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Cinema not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "No cinema found with that ID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners/{ownerId}/cinemas" : {
      "get" : {
        "tags" : [ "Cinemas" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches all cinemas from owner",
        "operationId" : "searchCinemaByOwner",
        "description" : "Gets all cinemas from logged owner",
        "parameters" : [ {
          "name" : "ownerId",
          "in" : "path",
          "description" : "owners _id to get cinemas from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 5
                    },
                    "cinemas" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Cinema"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You are not allowed to get these cinemas"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cinemas/cinemas-within/" : {
      "get" : {
        "tags" : [ "Cinemas" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches Cinema By Id",
        "operationId" : "searchCinemasWithin",
        "description" : "By passing in the appropriate options, you can search for available inventory in the system",
        "parameters" : [ {
          "name" : "distance",
          "in" : "query",
          "description" : "Set the maximum distance to the cinema in km",
          "required" : true,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : 10
          }
        }, {
          "name" : "latlng",
          "in" : "query",
          "description" : "Set your location",
          "required" : true,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "-34.48374569,-58345734"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 5
                    },
                    "cinemas" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Cinema"
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid Input",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid {QueryCasting}: {value}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/theaters" : {
      "post" : {
        "tags" : [ "Theaters" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Create new Theater",
        "description" : "Create new Theater",
        "operationId" : "addTheater",
        "requestBody" : {
          "description" : "Create a new Theater",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "theaterName" : {
                    "type" : "string",
                    "example" : "Sala 1"
                  },
                  "numberOfRows" : {
                    "type" : "number",
                    "example" : 20
                  },
                  "numberOfCols" : {
                    "type" : "number",
                    "example" : 10
                  },
                  "cinema" : {
                    "$ref" : "#/components/schemas/Cinema/properties/_id"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "$ref" : "#/components/schemas/Theater"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Duplicate key",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Duplicate field value: {value}. Please use another value!"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You must be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cinema/{cinemaId}/theaters" : {
      "get" : {
        "tags" : [ "Theaters" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches Theaters By Cinema",
        "operationId" : "searchTheaterByCinema",
        "description" : "Gets a specific cinema theaters",
        "parameters" : [ {
          "name" : "cinemaId",
          "in" : "path",
          "description" : "name that need to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 5
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "theaters" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Cinema"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid _id: {id}."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/theaters/{theaterId}" : {
      "get" : {
        "tags" : [ "Theaters" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches Theater By Id",
        "operationId" : "searchTheaterById",
        "description" : "Gets a single theater",
        "parameters" : [ {
          "name" : "theaterId",
          "in" : "path",
          "description" : "id of the theater",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "$ref" : "#/components/schemas/Theater"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid _id: {id}."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Theaters" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Update Theaters By Id",
        "description" : "This can only be done by the logged in owner.",
        "operationId" : "updateTheaters",
        "parameters" : [ {
          "name" : "theaterId",
          "in" : "path",
          "description" : "name that need to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update an existent Cinema",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Theater"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "$ref" : "#/components/schemas/Theater"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid _id: {id}."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Theaters" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Delete Theaters By Id",
        "description" : "This can only be done by the logged in owner.",
        "operationId" : "deleteTheaters",
        "parameters" : [ {
          "name" : "theaterId",
          "in" : "path",
          "description" : "name that need to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "string",
                      "example" : null
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Invalid params",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "No theater found with that ID"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/showtimes" : {
      "post" : {
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "Showtimes" ],
        "summary" : "Create new Showtime",
        "description" : "Create new Showtime",
        "operationId" : "addShowtimes",
        "requestBody" : {
          "description" : "Create a new Showtime. Only available for logged owners",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "theater" : {
                    "$ref" : "#/components/schemas/Theater/properties/_id"
                  },
                  "movie" : {
                    "$ref" : "#/components/schemas/Movie/properties/_id"
                  },
                  "startTime" : {
                    "type" : "string",
                    "format" : "date",
                    "example" : "2023-01-25T16:06:00Z"
                  },
                  "price" : {
                    "type" : "number",
                    "example" : 1000
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "showtime" : {
                          "$ref" : "#/components/schemas/Showtime"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Showtime alredy exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Duplicate field value: {value}. Please use another value!"
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You must be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Showtimes" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches Showtimes with query params",
        "operationId" : "searchShowtime",
        "description" : "Gets all showtimes with query options",
        "parameters" : [ {
          "name" : "startTime",
          "in" : "query",
          "description" : "Filter by date",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "available"
          }
        }, {
          "name" : "movie",
          "in" : "query",
          "description" : "Filter by movie",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "available"
          }
        }, {
          "name" : "cinema",
          "in" : "query",
          "description" : "Filter by cinema",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "available"
          }
        }, {
          "name" : "availableSeats",
          "in" : "query",
          "description" : "Filter by available seats left",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "number",
            "default" : "available"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 5
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Showtime"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/showtime/showtimesByTheater/{theaterId}" : {
      "get" : {
        "tags" : [ "Showtimes" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches Showtime By Theater Id",
        "operationId" : "searchShowtimeByTheaterId",
        "description" : "Get showtimes by theater id",
        "parameters" : [ {
          "name" : "theaterId",
          "in" : "path",
          "description" : "_id of the theater needed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "showtime" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Showtime"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid theater: {theaterId}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/showtime/{showtimeId}" : {
      "get" : {
        "tags" : [ "Showtimes" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches Showtime By Id",
        "operationId" : "searchShowtimeById",
        "description" : "Get showtimes by id",
        "parameters" : [ {
          "name" : "showtimeId",
          "in" : "path",
          "description" : "_id of the showtime needed",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Showtime"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "No document found with that id"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Showtimes" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Update Showtime By Id",
        "description" : "Update a showtime by id.",
        "operationId" : "updateShowtime",
        "parameters" : [ {
          "name" : "showtimeId",
          "in" : "path",
          "description" : "name that need to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update an existent Showtime in the store",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Showtime"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Showtime"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid _id: {id}."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Showtimes" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Delete Showtime By Id",
        "description" : "This can only be done by the logged in owner.",
        "operationId" : "deleteShowtime",
        "parameters" : [ {
          "name" : "showtimeId",
          "in" : "path",
          "description" : "name that need to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "string",
                      "example" : null
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged in"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "No doc found with that id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cinemas/{cinemaId}/movies/{movieId}/showtimes" : {
      "get" : {
        "tags" : [ "Showtimes" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches Showtimes of a movie in a cinema",
        "operationId" : "searchShowtimeBymovieAndCinema",
        "description" : "Gets all showtimes with query options",
        "parameters" : [ {
          "name" : "cinemaId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "movieId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "Filter by date",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "available"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 5
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "showtimes" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Showtime"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You you must be logged"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You do not have permission to perform this action"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies" : {
      "get" : {
        "tags" : [ "Movies" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches all movies",
        "operationId" : "searchmovies",
        "description" : "Search movies with query parameters",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Limit the size of movies",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : 10
          }
        }, {
          "name" : "skip",
          "in" : "query",
          "description" : "For pagination",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : 2
          }
        }, {
          "name" : "genre",
          "in" : "query",
          "description" : "Filter by genre",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "string",
            "example" : "Terror"
          }
        }, {
          "name" : "premiered",
          "in" : "query",
          "description" : "Filter by premiered",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "cinema",
          "in" : "query",
          "description" : "Filter by cinema",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rating",
          "in" : "query",
          "description" : "Order by rating",
          "required" : false,
          "explode" : true,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 5
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Movie"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You need to be logged"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cinema/{cinemaId}/movies" : {
      "get" : {
        "tags" : [ "Movies" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches all movies",
        "operationId" : "cinemamovies",
        "description" : "Search movies with query parameters",
        "parameters" : [ {
          "name" : "cinemaId",
          "in" : "path",
          "description" : "cinema id to get movies from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 5
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "doc" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Movie"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You do not have permission to perform this action"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "Invalid _id: {id}."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies/{movieId}" : {
      "get" : {
        "tags" : [ "Movies" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches movie By Id",
        "operationId" : "searchmovieById",
        "description" : "By passing in the appropriate options, you can search for available inventory in the system",
        "parameters" : [ {
          "name" : "movieId",
          "in" : "path",
          "description" : "movie that need to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/bookings" : {
      "post" : {
        "tags" : [ "Bookings" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "New showtime booking",
        "description" : "Create new Booking",
        "operationId" : "addBooking",
        "requestBody" : {
          "description" : "Create a new Booking",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "user" : {
                    "$ref" : "#/components/schemas/User/properties/_id"
                  },
                  "showtime" : {
                    "$ref" : "#/components/schemas/Showtime/properties/_id"
                  },
                  "seats" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "row" : {
                          "type" : "number",
                          "example" : 3
                        },
                        "columnd" : {
                          "type" : "number",
                          "example" : 3
                        },
                        "taken" : {
                          "type" : "boolean",
                          "example" : false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "booking" : {
                          "$ref" : "#/components/schemas/Booking"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You must be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "Bookings" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches user bookings",
        "operationId" : "searchBooking",
        "description" : "Get user bookings. You must be logged in",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 3
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "bookings" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Booking"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You you must be logged"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bookings/{bookingId}" : {
      "delete" : {
        "tags" : [ "Bookings" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Delete Booking By Id",
        "description" : "This can only be done by the logged in user.",
        "operationId" : "deleteBooking",
        "parameters" : [ {
          "name" : "bookingId",
          "in" : "path",
          "description" : "_id of the booking that needs to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "No document was found with that id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ratings" : {
      "post" : {
        "tags" : [ "Ratings" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Rate a movie",
        "description" : "Rate a movie",
        "operationId" : "rateMovie",
        "requestBody" : {
          "description" : "Create a new rating",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "rating" : {
                    "type" : "number",
                    "default" : 5,
                    "minimum" : 1,
                    "maximum" : 10
                  },
                  "comment" : {
                    "type" : "string"
                  },
                  "movie" : {
                    "$ref" : "#/components/schemas/Movie/properties/_id"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "rating" : {
                          "$ref" : "#/components/schemas/Rating"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Invalid Credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You must be logged in"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}/ratings" : {
      "get" : {
        "tags" : [ "Ratings" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches user ratings",
        "operationId" : "searchUserRatings",
        "description" : "Brings ratings by user or movie",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "description" : "_id of the user that provides reviews",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 3
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "ratings" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Rating"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You you must be logged"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/movies/{movieId}/ratings" : {
      "get" : {
        "tags" : [ "Ratings" ],
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "summary" : "Searches movie ratings",
        "operationId" : "searchmovieRatings",
        "description" : "Brings ratings by user or movie",
        "parameters" : [ {
          "name" : "movieId",
          "in" : "path",
          "description" : "_id of the movie that provides reviews",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "success"
                    },
                    "results" : {
                      "type" : "number",
                      "example" : 3
                    },
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "ratings" : {
                          "type" : "array",
                          "items" : {
                            "$ref" : "#/components/schemas/Rating"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string",
                      "example" : "fail"
                    },
                    "message" : {
                      "type" : "string",
                      "example" : "You you must be logged"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "User" : {
        "type" : "object",
        "required" : [ "name", "mail", "googleId", "photo" ],
        "properties" : {
          "_id" : {
            "type" : "string",
            "format" : "ObjectoId",
            "example" : "d290f1ee6c544b0190e6d701748f0851"
          },
          "name" : {
            "type" : "string",
            "example" : "Tom Jones"
          },
          "email" : {
            "type" : "string",
            "format" : "mail",
            "example" : "tomjones@gmail.com"
          },
          "googleId" : {
            "type" : "string",
            "format" : "googleId",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ"
          },
          "photo" : {
            "type" : "string",
            "format" : "url",
            "example" : "https://....."
          },
          "bookings" : {
            "type" : "array",
            "format" : "ObjectoId",
            "items" : {
              "$ref" : "#/components/schemas/Booking/properties/_id"
            },
            "nullable" : true
          }
        }
      },
      "Owner" : {
        "type" : "object",
        "required" : [ "mail", "password" ],
        "properties" : {
          "_id" : {
            "type" : "string",
            "format" : "ObjectoId",
            "example" : "d290f1ee6c544b0190e6d701748f0851"
          },
          "name" : {
            "type" : "string",
            "example" : "Elon"
          },
          "email" : {
            "type" : "string",
            "format" : "mail",
            "example" : "elon@gmail.com"
          },
          "isVerified" : {
            "type" : "boolean",
            "example" : true
          },
          "photo" : {
            "type" : "string",
            "format" : "url",
            "example" : "https://....."
          },
          "cinemas" : {
            "type" : "array",
            "format" : "ObjectoId",
            "items" : {
              "$ref" : "#/components/schemas/Cinema/properties/_id"
            },
            "nullable" : true
          }
        }
      },
      "Cinema" : {
        "type" : "object",
        "required" : [ "name", "company", "price", "address" ],
        "properties" : {
          "_id" : {
            "type" : "string",
            "format" : "ObjectoId",
            "example" : "d290f1ee6c544b0190e6d701748f0851"
          },
          "company" : {
            "type" : "string",
            "example" : "Hoyts"
          },
          "name" : {
            "type" : "string",
            "example" : "Hoyts Abasto"
          },
          "imageUrl" : {
            "type" : "string",
            "format" : "url",
            "example" : "https://....."
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          },
          "location" : {
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "example" : "Point"
              },
              "coordinates" : {
                "type" : "array",
                "items" : {
                  "type" : "number",
                  "example" : [ -37.1815644, -56.9209917 ]
                }
              }
            }
          },
          "theaters" : {
            "type" : "array",
            "format" : "ObjectoId",
            "items" : {
              "$ref" : "#/components/schemas/Theater/properties/_id"
            }
          },
          "active" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "Address" : {
        "type" : "object",
        "required" : [ "street", "number", "county", "city", "state", "country" ],
        "properties" : {
          "street" : {
            "type" : "string",
            "example" : "Av. Corrientes"
          },
          "number" : {
            "type" : "integer",
            "example" : "4567"
          },
          "county" : {
            "type" : "string",
            "example" : "Abasto"
          },
          "city" : {
            "type" : "string",
            "example" : "CABA"
          },
          "state" : {
            "type" : "string",
            "example" : "Buenos Aires"
          },
          "country" : {
            "type" : "string",
            "example" : "Argentina"
          },
          "postalCode" : {
            "type" : "string",
            "example" : 1000
          }
        }
      },
      "Theater" : {
        "type" : "object",
        "required" : [ "theaterName", "cinema", "numberOfRows", "numberOfCols" ],
        "properties" : {
          "_id" : {
            "type" : "string",
            "format" : "ObjectoId",
            "example" : "d290f1ee6c544b0190e6d701748f0851"
          },
          "theaterName" : {
            "type" : "string",
            "example" : "Sala 1"
          },
          "cinema" : {
            "$ref" : "#/components/schemas/Cinema/properties/_id"
          },
          "numberOfRows" : {
            "type" : "number",
            "example" : 20
          },
          "numberOfCols" : {
            "type" : "number",
            "example" : 10
          },
          "active" : {
            "type" : "boolean",
            "example" : true
          }
        }
      },
      "Showtime" : {
        "type" : "object",
        "required" : [ "theater", "movie", "startTime" ],
        "properties" : {
          "_id" : {
            "type" : "string",
            "format" : "ObjectoId",
            "example" : "d290f1ee6c544b0190e6d701748f0851"
          },
          "cinema" : {
            "$ref" : "#/components/schemas/Cinema/properties/_id"
          },
          "theater" : {
            "$ref" : "#/components/schemas/Theater/properties/_id"
          },
          "movie" : {
            "$ref" : "#/components/schemas/Movie/properties/_id"
          },
          "startTime" : {
            "type" : "string",
            "format" : "date"
          },
          "availableSeatsLeft" : {
            "type" : "number",
            "example" : 20
          },
          "seats" : {
            "type" : "array",
            "items" : {
              "properties" : {
                "row" : {
                  "type" : "number",
                  "example" : 3
                },
                "columnd" : {
                  "type" : "number",
                  "example" : 3
                },
                "taken" : {
                  "type" : "boolean",
                  "example" : false
                }
              }
            }
          },
          "price" : {
            "type" : "number",
            "example" : 900
          }
        }
      },
      "Movie" : {
        "type" : "object",
        "required" : [ "title", "genre", "synopsis", "premiered", "premiereDate", "duration", "director", "actors" ],
        "properties" : {
          "_id" : {
            "type" : "string",
            "format" : "ObjectoId",
            "example" : "d290f1ee6c544b0190e6d701748f0851"
          },
          "name" : {
            "type" : "string",
            "example" : "The Grand Budapest Hotel"
          },
          "genre" : {
            "type" : "string",
            "enum" : [ "Terror", "Action", "Romance", "War", "Sci-Fi", "Documentary" ]
          },
          "synopsis" : {
            "type" : "string"
          },
          "imageUrl" : {
            "type" : "string",
            "format" : "url",
            "example" : "https://www.imdb.com/title/tt2278388/mediaviewer/rm1834474496/?ref_=tt_ov_i"
          },
          "premiered" : {
            "type" : "boolean",
            "example" : false
          },
          "premiereDate" : {
            "type" : "string",
            "format" : "date",
            "example" : "2023-07-28T00:00:00.000Z"
          },
          "duration" : {
            "type" : "number",
            "example" : 120
          },
          "director" : {
            "type" : "string",
            "example" : "Wes Anderson"
          },
          "actors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : [ "Ralph Fiennes", "Bill Murray" ]
            }
          },
          "ratingsAverage" : {
            "type" : "number",
            "format" : "float",
            "example" : 4.2
          },
          "ratingsQuantity" : {
            "type" : "number",
            "format" : "float",
            "example" : 0
          }
        }
      },
      "Rating" : {
        "type" : "object",
        "required" : [ "rating", "date", "comment", "movie", "user" ],
        "properties" : {
          "_id" : {
            "type" : "string",
            "format" : "ObjectoId",
            "example" : "d290f1ee6c544b0190e6d701748f0851"
          },
          "rating" : {
            "type" : "number",
            "default" : 5,
            "minimum" : 1,
            "maximum" : 10
          },
          "date" : {
            "type" : "string",
            "format" : "date"
          },
          "comment" : {
            "type" : "string"
          },
          "movie" : {
            "$ref" : "#/components/schemas/Movie/properties/_id"
          },
          "user" : {
            "$ref" : "#/components/schemas/User/properties/_id"
          }
        }
      },
      "Booking" : {
        "type" : "object",
        "required" : [ "showtime", "seats", "total" ],
        "properties" : {
          "_id" : {
            "type" : "string",
            "format" : "ObjectoId",
            "example" : "d290f1ee6c544b0190e6d701748f0851"
          },
          "user" : {
            "$ref" : "#/components/schemas/User/properties/_id"
          },
          "showtime" : {
            "type" : "array",
            "format" : "ObjectoId",
            "items" : {
              "$ref" : "#/components/schemas/Showtime/properties/_id"
            },
            "nullable" : true
          },
          "seats" : {
            "type" : "array",
            "items" : {
              "properties" : {
                "row" : {
                  "type" : "number",
                  "example" : 3
                },
                "columnd" : {
                  "type" : "number",
                  "example" : 3
                },
                "taken" : {
                  "type" : "boolean",
                  "example" : false
                }
              }
            }
          },
          "total" : {
            "type" : "number",
            "format" : "float",
            "example" : 49.99
          },
          "active" : {
            "type" : "boolean",
            "example" : true
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}